<?xml version="1.0" ?>
<zabbix_export>
	<version>3.2</version>
	<date>2016-01-01T01:01:01Z</date>
	<groups>
		<group>
			<name>Templates</name>
		</group>
	</groups>
	<templates>
		<template>
			<template>GTS-IS Template Vyatta - Zabbix - No proxy</template>
			<name>GTS-IS Template Vyatta - Zabbix - No proxy</name>
			<description>Use this template to monitor Vyatta without a Zabbix/Sherlock proxy. Proxies  manage client configuration, files and scripts sync. This template have the SSH monitoring items that will push files and configurations from Zabbix server to Zabbix client on Vyatta without using proxies.</description>
			<groups>
				<group>
					<name>Templates</name>
				</group>
			</groups>
			<applications>
				<application>
					<name>Sherlock</name>
				</application>
			</applications>
			<items>
				<item>
					<name>Install/Reconfigure Zabbix Agent</name>
					<type>13</type>
					<snmp_community/>
					<multiplier>0</multiplier>
					<snmp_oid/>
					<key>ssh.run[installAgent,127.0.0.1,22,utf8]</key>
					<delay>30</delay>
					<history>90</history>
					<trends>365</trends>
					<status>0</status>
					<value_type>3</value_type>
					<allowed_hosts/>
					<units/>
					<delta>0</delta>
					<snmpv3_contextname/>
					<snmpv3_securityname/>
					<snmpv3_securitylevel>0</snmpv3_securitylevel>
					<snmpv3_authprotocol>0</snmpv3_authprotocol>
					<snmpv3_authpassphrase/>
					<snmpv3_privprotocol>0</snmpv3_privprotocol>
					<snmpv3_privpassphrase/>
					<formula>1</formula>
					<delay_flex/>
					<params>rm ~/.ssh/known_hosts
cd /var/Collector/zbxScripts
if netstat -l|grep 8000 &gt; /dev/null; then echo 0 &gt; /dev/null; else echo &quot;waiting for simpleHTTPserver&quot; &amp;&amp; exit; fi
if curl -s http://{HOST.IP}:10050 &gt; /dev/null; then echo &quot;agent is listening&quot;; else ./installZbxAgent.exp {HOST.IP} {$SSH_ID} {$SSH_PASSWORD} &amp;&amp; echo &quot;installZbxAgent.exp executed&quot;; fi</params>
					<ipmi_sensor/>
					<data_type>0</data_type>
					<authtype>0</authtype>
					<username>{$ZBXSVR_ID}</username>
					<password>{$ZBXSVR_PASSWORD}</password>
					<publickey/>
					<privatekey/>
					<port/>
					<description/>
					<inventory_link>0</inventory_link>
					<applications>
						<application>
							<name>Sherlock</name>
						</application>
					</applications>
					<valuemap/>
					<logtimefmt/>
				</item>
				<item>
					<name>Install/Reconfigure Zabbix Agent2</name>
					<type>13</type>
					<snmp_community/>
					<multiplier>0</multiplier>
					<snmp_oid/>
					<key>ssh.run[installAgent2,127.0.0.1,22,utf8]</key>
					<delay>30</delay>
					<history>90</history>
					<trends>365</trends>
					<status>0</status>
					<value_type>3</value_type>
					<allowed_hosts/>
					<units/>
					<delta>0</delta>
					<snmpv3_contextname/>
					<snmpv3_securityname/>
					<snmpv3_securitylevel>0</snmpv3_securitylevel>
					<snmpv3_authprotocol>0</snmpv3_authprotocol>
					<snmpv3_authpassphrase/>
					<snmpv3_privprotocol>0</snmpv3_privprotocol>
					<snmpv3_privpassphrase/>
					<formula>1</formula>
					<delay_flex/>
					<params>rm ~/.ssh/known_hosts
cd /var/Collector/zbxScripts
if netstat -l|grep 8000 &gt; /dev/null; then echo 0 &gt; /dev/null; else echo &quot;waiting for simpleHTTPserver&quot; &amp;&amp; exit; fi
if curl -s http://{HOST.IP}:10050 &gt; /dev/null; then echo &quot;agent is listening&quot;; else ./installZbxAgent.exp {HOST.IP} {$SSH_ID} {$SSH_PASSWORD} &amp;&amp; echo &quot;installZbxAgent.exp executed&quot;; fi</params>
					<ipmi_sensor/>
					<data_type>0</data_type>
					<authtype>0</authtype>
					<username>{$ZBXSVR_ID}</username>
					<password>{$ZBXSVR_PASSWORD}</password>
					<publickey/>
					<privatekey/>
					<port/>
					<description/>
					<inventory_link>0</inventory_link>
					<applications>
						<application>
							<name>Sherlock</name>
						</application>
					</applications>
					<valuemap/>
					<logtimefmt/>
				</item>
			</items>
			<discovery_rules/>
			<httptests/>
			<macros>
				<macro>
					<macro>{$ZBXSVR_ID}</macro>
					<value/>
				</macro>
				<macro>
					<macro>{$ZBXSVR_PASSWORD}</macro>
					<value/>
				</macro>
			</macros>
			<templates/>
			<screens/>
		</template>
	</templates>
</zabbix_export>
