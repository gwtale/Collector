<?xml version="1.0" ?>
<zabbix_export>
	<version>3.2</version>
	<date>2016-01-01T01:01:01Z</date>
	<groups>
		<group>
			<name>Templates</name>
		</group>
	</groups>
	<templates>
		<template>
			<template>GTS-IS Template Virt VMware VROPS</template>
			<name>GTS-IS Template Virt VMware VROPS</name>
			<description>WARNING!!! This template MUST be associated with a ZABBIX PROXY who will access the VROPS server. Data collection is done entirely via API.</description>
			<groups>
				<group>
					<name>Templates</name>
				</group>
			</groups>
			<applications>
				<application>
					<name>Data Collection</name>
				</application>
			</applications>
			<items>
				<item>
					<name>Create alerts datafile</name>
					<type>13</type>
					<snmp_community/>
					<multiplier>0</multiplier>
					<snmp_oid/>
					<key>ssh.run[createAlertsDatafile]</key>
					<delay>60</delay>
					<history>1</history>
					<trends>0</trends>
					<status>0</status>
					<value_type>4</value_type>
					<allowed_hosts/>
					<units/>
					<delta>0</delta>
					<snmpv3_contextname/>
					<snmpv3_securityname/>
					<snmpv3_securitylevel>0</snmpv3_securitylevel>
					<snmpv3_authprotocol>0</snmpv3_authprotocol>
					<snmpv3_authpassphrase/>
					<snmpv3_privprotocol>0</snmpv3_privprotocol>
					<snmpv3_privpassphrase/>
					<formula>1</formula>
					<delay_flex/>
					<params>#!/bin/bash
cd /var/Collector
sudo cat &lt;&lt;EOF | sudo python -

#!/usr/bin/python

import requests
import json
import os.path
import modules.log.syslog as syslog
import xml.dom.minidom

logger = syslog.getLogger(__name__)

def getResponse(server, opt=None, userId=None, userPw=None):
    logger.info(&quot;Starting getResponse()...&quot;)
    session = requests.Session()
    session.auth = (userId, userPw)
    auth = session.post(&quot;https://&quot; + server, verify=False)
    response = session.get(&quot;https://&quot; + server + &quot;/&quot; + opt, verify=False)
    return response.content


rawResponse = getResponse(&quot;{$VROPS_IP}&quot;, &quot;suite-api/api/alerts&quot;, &quot;{$VROPS_ID}&quot;, &quot;{$VROPS_PW}&quot;)
xmlResponse = xml.dom.minidom.parseString(rawResponse)
f = open(&quot;/var/Collector/data/vrops_alerts_{$VROPS_IP}.xml&quot;, 'w+')
f.write(xmlResponse.toprettyxml().encode('utf-8'))
f.close()
print(&quot;Alert collection complete&quot;)

EOF</params>
					<ipmi_sensor/>
					<data_type>0</data_type>
					<authtype>0</authtype>
					<username>{$PROXY_SSH_ID}</username>
					<password>{$PROXY_SSH_PW}</password>
					<publickey/>
					<privatekey/>
					<port/>
					<description/>
					<inventory_link>0</inventory_link>
					<applications>
						<application>
							<name>Data Collection</name>
						</application>
					</applications>
					<valuemap/>
					<logtimefmt/>
				</item>
				<item>
					<name>Create resources datafile</name>
					<type>13</type>
					<snmp_community/>
					<multiplier>0</multiplier>
					<snmp_oid/>
					<key>ssh.run[createResourcesDatafile]</key>
					<delay>600</delay>
					<history>1</history>
					<trends>0</trends>
					<status>0</status>
					<value_type>4</value_type>
					<allowed_hosts/>
					<units/>
					<delta>0</delta>
					<snmpv3_contextname/>
					<snmpv3_securityname/>
					<snmpv3_securitylevel>0</snmpv3_securitylevel>
					<snmpv3_authprotocol>0</snmpv3_authprotocol>
					<snmpv3_authpassphrase/>
					<snmpv3_privprotocol>0</snmpv3_privprotocol>
					<snmpv3_privpassphrase/>
					<formula>1</formula>
					<delay_flex/>
					<params>#!/bin/bash
cd /var/Collector
sudo cat &lt;&lt;EOF | sudo python -

#!/usr/bin/python

import requests
import json
import os.path
import modules.log.syslog as syslog
import xml.dom.minidom

logger = syslog.getLogger(__name__)

def getResponse(server, opt=None, userId=None, userPw=None):
    logger.info(&quot;Starting getResponse()...&quot;)
    session = requests.Session()
    session.auth = (userId, userPw)
    auth = session.post(&quot;https://&quot; + server, verify=False)
    response = session.get(&quot;https://&quot; + server + &quot;/&quot; + opt, verify=False)
    return response.content


rawResponse = getResponse(&quot;{$VROPS_IP}&quot;, &quot;suite-api/api/resources&quot;, &quot;{$VROPS_ID}&quot;, &quot;{$VROPS_PW}&quot;)
xmlResponse = xml.dom.minidom.parseString(rawResponse)
f = open(&quot;/var/Collector/data/vrops_resources_{$VROPS_IP}.xml&quot;, 'w+')
f.write(xmlResponse.toprettyxml().encode('utf-8'))
f.close()
print(&quot;Resources collection complete&quot;)

EOF</params>
					<ipmi_sensor/>
					<data_type>0</data_type>
					<authtype>0</authtype>
					<username>{$PROXY_SSH_ID}</username>
					<password>{$PROXY_SSH_PW}</password>
					<publickey/>
					<privatekey/>
					<port/>
					<description/>
					<inventory_link>0</inventory_link>
					<applications>
						<application>
							<name>Data Collection</name>
						</application>
					</applications>
					<valuemap/>
					<logtimefmt/>
				</item>
				<item>
					<name>Create type datafile</name>
					<type>13</type>
					<snmp_community/>
					<multiplier>0</multiplier>
					<snmp_oid/>
					<key>ssh.run[createTypeDatafile]</key>
					<delay>1200</delay>
					<history>1</history>
					<trends>0</trends>
					<status>0</status>
					<value_type>4</value_type>
					<allowed_hosts/>
					<units/>
					<delta>0</delta>
					<snmpv3_contextname/>
					<snmpv3_securityname/>
					<snmpv3_securitylevel>0</snmpv3_securitylevel>
					<snmpv3_authprotocol>0</snmpv3_authprotocol>
					<snmpv3_authpassphrase/>
					<snmpv3_privprotocol>0</snmpv3_privprotocol>
					<snmpv3_privpassphrase/>
					<formula>1</formula>
					<delay_flex/>
					<params>#!/bin/bash
cd /var/Collector
sudo cat &lt;&lt;EOF | sudo python -

#!/usr/bin/python

import requests
import json
import os.path
import modules.log.syslog as syslog
import xml.dom.minidom

logger = syslog.getLogger(__name__)

def getResponse(server, opt=None, userId=None, userPw=None):
    logger.info(&quot;Starting getResponse()...&quot;)
    session = requests.Session()
    session.auth = (userId, userPw)
    auth = session.post(&quot;https://&quot; + server, verify=False)
    response = session.get(&quot;https://&quot; + server + &quot;/&quot; + opt, verify=False)
    return response.content


rawResponse = getResponse(&quot;{$VROPS_IP}&quot;, &quot;/suite-api/api/alerts/types&quot;, &quot;{$VROPS_ID}&quot;, &quot;{$VROPS_PW}&quot;)
xmlResponse = xml.dom.minidom.parseString(rawResponse)
f = open(&quot;/var/Collector/data/vrops_types_{$VROPS_IP}.xml&quot;, 'w+')
f.write(xmlResponse.toprettyxml().encode('utf-8'))
f.close()
print(&quot;Type collection complete&quot;)

EOF</params>
					<ipmi_sensor/>
					<data_type>0</data_type>
					<authtype>0</authtype>
					<username>{$PROXY_SSH_ID}</username>
					<password>{$PROXY_SSH_PW}</password>
					<publickey/>
					<privatekey/>
					<port/>
					<description/>
					<inventory_link>0</inventory_link>
					<applications>
						<application>
							<name>Data Collection</name>
						</application>
					</applications>
					<valuemap/>
					<logtimefmt/>
				</item>
			</items>
			<discovery_rules/>
			<httptests/>
			<macros>
				<macro>
					<macro>{$PROXY_SSH_ID}</macro>
					<value/>
				</macro>
				<macro>
					<macro>{$PROXY_SSH_PW}</macro>
					<value/>
				</macro>
				<macro>
					<macro>{$VROPS_ID}</macro>
					<value/>
				</macro>
				<macro>
					<macro>{$VROPS_IP}</macro>
					<value/>
				</macro>
				<macro>
					<macro>{$VROPS_PW}</macro>
					<value/>
				</macro>
			</macros>
			<templates/>
			<screens/>
		</template>
	</templates>
</zabbix_export>
