### SYSTEM
UserParameter=show_version,/opt/vyatta/bin/vyatta-op-cmd-wrapper show version|grep Version| awk '{ print $$2 }'
UserParameter=conntrack_max,cat /proc/sys/net/ipv4/netfilter/ip_conntrack_max
UserParameter=conntrack_count,cat /proc/sys/net/ipv4/netfilter/ip_conntrack_count
UserParameter=process_status[*],if pgrep $1 > /dev/null; then echo 1; else echo 0; fi

### READ TEXT
UserParameter=read[*],cat $1

### NETWORK
UserParameter=zones,/opt/vyatta/bin/vyatta-op-cmd-wrapper show zone-policy
UserParameter=routing_table,/opt/vyatta/bin/vyatta-op-cmd-wrapper show ip route
# Ping IP - Pings the address configured in Zabbix item, returns 0 for success and 2 for failure. Save value as 'host status' in template.
UserParameter=ping_ip[*],if fping -u "$1 " >& /dev/null ;then echo 0; else echo 2; fi
UserParameter=ping_srcIF_dst[*],/bin/ping -c 1 -I $1 $2 |grep icmp_req|awk '{ print $$7 }'|awk -F'=' '{print $$2}'

### VRRP
UserParameter=vrrp_status[*],/opt/vyatta/bin/vyatta-op-cmd-wrapper show vrrp |grep "$1 " | awk '{ print $$3 }'
UserParameter=vrrp_numStatus,VRRPSTATUS="$(/opt/vyatta/bin/vyatta-op-cmd-wrapper show vrrp |grep 'bond0 '| awk '{ print $$3 }')" && if [[ $VRRPSTATUS == *"MASTER"* ]]; then echo 1; elif [[ $VRRPSTATUS == *"BACKUP"* ]]; then echo 0; else sleep 5; VRRPSTATUS="$(/opt/vyatta/bin/vyatta-op-cmd-wrapper show vrrp |grep 'bond0 '| awk '{ print $$3 }')" && if [[ $VRRPSTATUS == *"MASTER"* ]]; then echo 1; elif [[ $VRRPSTATUS == *"BACKUP"* ]]; then echo 0; else echo 2; fi; fi
UserParameter=vrrp_lasttransition[*],/opt/vyatta/bin/vyatta-op-cmd-wrapper show vrrp |grep "$1 " | awk '{ print $$6 }'

### GRE
UserParameter=gre_peer[*],/opt/vyatta/bin/vyatta-op-cmd-wrapper show interfaces tunnel "$1 " |grep peer|awk '{ print $$4 }'
UserParameter=gre_peer_latency[*],peer=`/opt/vyatta/bin/vyatta-op-cmd-wrapper show interfaces tunnel "$1 " |grep peer|awk '{ print $$4 }'`;if fping -u $$peer >& /dev/null ;then fping -e $$peer|awk '{print substr($$4,2); }'; else echo 0; fi
UserParameter=gre_peer_alive[*],peer=`/opt/vyatta/bin/vyatta-op-cmd-wrapper show interfaces tunnel "$1 " |grep peer|awk '{ print $$4 }'`;if fping -u $$peer >& /dev/null ;then echo 1; else echo 0; fi
UserParameter=gre_local[*],/opt/vyatta/bin/vyatta-op-cmd-wrapper show interfaces tunnel "$1 " |grep peer|awk '{ print $$2 }'

### IPSEC
UserParameter=vpn_tunnel_status[*],/etc/zabbix/vyatta_ipsectunstatus.sh $1 $2
#UserParameter=vpn_tunnel_status[*],TUNSTATUS="$(/opt/vyatta/bin/vyatta-op-cmd-wrapper show vpn ipsec sa peer $1 tunnel $2 |tail -n 3|head -n 1|awk '{ print $$2 }')" && if [ "$TUNSTATUS" == "up" ]; then echo '1'; else echo '0'; fi
# UserParameter=vpn_tunnel_reset[*],TUNSTATUS="$(/opt/vyatta/bin/vyatta-op-cmd-wrapper show vpn ipsec sa peer $1 tunnel $2 |tail -n 3|head -n 1|awk '{ print $$2 }')" && if [ "$TUNSTATUS" == "up" ]; then echo 'tunnel OK'; else /opt/vyatta/bin/vyatta-op-cmd-wrapper reset vpn ipsec-peer $1 tunnel $2 && echo 'tunnel reset'; fi
UserParameter=vpn_tunnel_reset[*],TUNSTATUS="$(/etc/zabbix/vyatta_ipsectunstatus.sh $1 $2)"; if [ "$TUNSTATUS" == "0" ]; then VRRPSTATUS="$(/opt/vyatta/bin/vyatta-op-cmd-wrapper show vrrp |grep 'bond0 '| awk '{ print $$3 }')"; if [[ $VRRPSTATUS == *"MASTER"* ]]; then /opt/vyatta/bin/vyatta-op-cmd-wrapper reset vpn ipsec-peer $1 tunnel $2 && echo 'tunnel reset'; else echo 'Node is VRRP BACKUP. Skipping...'; fi; else echo 'tunnel not SPECIFICALLY down, skipping...'; fi
UserParameter=vpn_tunnel_bytesin[*],TUNSTATUS="$(/etc/zabbix/vyatta_ipsectunstatus.sh $1 $2)" && if [[ $TUNSTATUS == 1 ]]; then result=`/opt/vyatta/bin/vyatta-op-cmd-wrapper show vpn ipsec sa statistics peer $1 tunnel $2 |tail -n 4|grep in|awk '{print $$5}'` && echo $result; else echo 0; fi
UserParameter=vpn_tunnel_bytesout[*],TUNSTATUS="$(/etc/zabbix/vyatta_ipsectunstatus.sh $1 $2)" && if [[ $TUNSTATUS == 1 ]]; then result=`/opt/vyatta/bin/vyatta-op-cmd-wrapper show vpn ipsec sa statistics peer $1 tunnel $2 |tail -n 4|grep out|awk '{print $$5}'` && echo $result; else echo 0; fi
# ipsec routing table max size
UserParameter=xfrm4_gc_thresh,cat /proc/sys/net/ipv4/xfrm4_gc_thresh
UserParameter=xfrm_stat[*],cat /proc/net/xfrm_stat|grep "$1 " | awk '{ print $$2 }'

### DISCOVERIES
UserParameter=discovery.vpn_peers,/etc/zabbix/peer_discoveryv2.sh
UserParameter=discovery.gre_tunnels,/etc/zabbix/gre_discovery.sh
