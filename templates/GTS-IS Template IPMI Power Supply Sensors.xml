<?xml version="1.0" ?>
<zabbix_export>
	<version>3.4</version>
	<date>2017-01-01T01:01:01Z</date>
	<groups>
		<group>
			<name>IPMI templates</name>
		</group>
	</groups>
	<templates>
		<template>
			<template>GTS-IS Template IPMI Power Supply Sensors</template>
			<name>GTS-IS Template IPMI Power Supply Sensors</name>
			<description>IPMI template for power supplies sensors (sensor type code `08h`) with sensor-specific discrete values (reading type `6Fh`).

The `{$HOST.IPMI.CONN}`, `{$HOST.IPMI.USER}` and `{$HOST.IPMI.PASS}` macros have to be set according to your IPMI configuration.

NOTE: This is a modded template. The original can be found here: https://raw.githubusercontent.com/radiorabe/rabe-zabbix/master/ipmi/Power_Supply_Sensors/Template_IPMI_Power_Supply_Sensors.xml</description>
			<groups>
				<group>
					<name>IPMI templates</name>
				</group>
			</groups>
			<applications>
				<application>
					<name>Power Supply</name>
				</application>
			</applications>
			<items/>
			<discovery_rules>
				<discovery_rule>
					<name>Power supply IPMI sensor discovery</name>
					<type>10</type>
					<snmp_community/>
					<snmp_oid/>
					<key>ipmi-sensor-discovery.sh[&quot;{$MGT_IP}&quot;,&quot;{$MGT_USER}&quot;,&quot;{$MGT_PASSWORD}&quot;, &quot;{$IPMI_POWER_SUPPLY_SENSOR_TYPES}&quot;]</key>
					<delay>1800</delay>
					<status>0</status>
					<allowed_hosts/>
					<snmpv3_contextname/>
					<snmpv3_securityname/>
					<snmpv3_securitylevel>0</snmpv3_securitylevel>
					<snmpv3_authprotocol>0</snmpv3_authprotocol>
					<snmpv3_authpassphrase/>
					<snmpv3_privprotocol>0</snmpv3_privprotocol>
					<snmpv3_privpassphrase/>
					<params/>
					<ipmi_sensor/>
					<authtype>0</authtype>
					<username/>
					<password/>
					<publickey/>
					<privatekey/>
					<port/>
					<filter>
						<evaltype>0</evaltype>
						<formula/>
						<conditions/>
					</filter>
					<lifetime>7d</lifetime>
					<description>Discovers power supply IPMI sensors with the help of the external ipmi-sensor-discovery.sh script.</description>
					<item_prototypes>
						<item_prototype>
							<name>Sensor {#IPMI_SENSOR_NAME}</name>
							<type>12</type>
							<snmp_community/>
							<snmp_oid/>
							<key>ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}]</key>
							<delay>300</delay>
							<history>90d</history>
							<trends>0</trends>
							<status>0</status>
							<value_type>3</value_type>
							<allowed_hosts/>
							<units/>
							<snmpv3_contextname/>
							<snmpv3_securityname/>
							<snmpv3_securitylevel>0</snmpv3_securitylevel>
							<snmpv3_authprotocol>0</snmpv3_authprotocol>
							<snmpv3_authpassphrase/>
							<snmpv3_privprotocol>0</snmpv3_privprotocol>
							<snmpv3_privpassphrase/>
							<params/>
							<ipmi_sensor>{#IPMI_SENSOR_NAME}0</ipmi_sensor>
							<authtype>0</authtype>
							<username/>
							<password/>
							<publickey/>
							<privatekey/>
							<port/>
							<description>IPMI discrete sensor prototype item for a power supply (sensor type code `08h`).
0 is appended at the end, as SuperMicro identifies discrete sensors with an 0 at the end of sensor name string.</description>
							<inventory_link>0</inventory_link>
							<applications>
								<application>
									<name>Power Supply</name>
								</application>
							</applications>
							<valuemap/>
							<logtimefmt/>
							<preprocessing/>
							<jmx_endpoint/>
							<application_prototypes/>
							<master_item_prototype/>
						</item_prototype>
					</item_prototypes>
					<trigger_prototypes>
						<trigger_prototype>
							<expression>{GTS-IS Template IPMI Power Supply Sensors:ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}].band(#1,2)}=2</expression>
							<recovery_mode>0</recovery_mode>
							<recovery_expression/>
							<name>Power supply {#IPMI_SENSOR_NAME} failure detected on {HOST.NAME}</name>
							<correlation_mode>0</correlation_mode>
							<correlation_tag/>
							<url/>
							<status>0</status>
							<priority>4</priority>
							<description>The IPMI power supply sensor (sensor
type code 08h) is in &quot;Power Supply Failure detected&quot; (sensor specific offset 01h) state. The second least significant bit = 1 (VALUE &amp; 10 = 10).</description>
							<type>0</type>
							<manual_close>0</manual_close>
							<dependencies/>
							<tags/>
						</trigger_prototype>
						<trigger_prototype>
							<expression>{GTS-IS Template IPMI Power Supply Sensors:ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}].band(#1,64)}=64</expression>
							<recovery_mode>0</recovery_mode>
							<recovery_expression/>
							<name>Power supply {#IPMI_SENSOR_NAME} has a configuration error on {HOST.NAME}</name>
							<correlation_mode>0</correlation_mode>
							<correlation_tag/>
							<url/>
							<status>0</status>
							<priority>4</priority>
							<description>The IPMI power supply sensor (sensor
type code 08h) is in &quot;Configuration error&quot; (sensor specific offset 06h) state. The seventh least significant bit is 1 (VALUE &amp; 1000000 = 1000000).</description>
							<type>0</type>
							<manual_close>0</manual_close>
							<dependencies/>
							<tags/>
						</trigger_prototype>
						<trigger_prototype>
							<expression>{GTS-IS Template IPMI Power Supply Sensors:ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}].band(#1,8)}=8</expression>
							<recovery_mode>0</recovery_mode>
							<recovery_expression/>
							<name>Power supply {#IPMI_SENSOR_NAME} input lost (AC/DC) on {HOST.NAME}</name>
							<correlation_mode>0</correlation_mode>
							<correlation_tag/>
							<url/>
							<status>0</status>
							<priority>4</priority>
							<description>The IPMI power supply sensor (sensor
type code 08h) is in &quot;Power Supply input lost (AC/DC)&quot; (sensor specific offset 03h) state. The 	fourth least significant bit is 1 (VALUE &amp; 1000 = 1000).</description>
							<type>0</type>
							<manual_close>0</manual_close>
							<dependencies/>
							<tags/>
						</trigger_prototype>
						<trigger_prototype>
							<expression>{GTS-IS Template IPMI Power Supply Sensors:ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}].band(#1,16)}=16</expression>
							<recovery_mode>0</recovery_mode>
							<recovery_expression/>
							<name>Power supply {#IPMI_SENSOR_NAME} input lost or out-of-range on {HOST.NAME}</name>
							<correlation_mode>0</correlation_mode>
							<correlation_tag/>
							<url/>
							<status>0</status>
							<priority>4</priority>
							<description>The IPMI power supply sensor (sensor
type code 08h) is in &quot;Power Supply input lost or out-of-range&quot; (sensor specific offset 04h) state. The 	fifth least significant bit is 1 (VALUE &amp; 10000 = 10000).</description>
							<type>0</type>
							<manual_close>0</manual_close>
							<dependencies/>
							<tags/>
						</trigger_prototype>
						<trigger_prototype>
							<expression>{GTS-IS Template IPMI Power Supply Sensors:ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}].band(#1,32)}=32</expression>
							<recovery_mode>0</recovery_mode>
							<recovery_expression/>
							<name>Power supply {#IPMI_SENSOR_NAME} input out-of-range, but present on {HOST.NAME}</name>
							<correlation_mode>0</correlation_mode>
							<correlation_tag/>
							<url/>
							<status>0</status>
							<priority>4</priority>
							<description>The IPMI power supply sensor (sensor
type code 08h) is in &quot;Power Supply input out-of-range, but present&quot; (sensor specific offset 05h) state. The sixth least significant bit is 1 (VALUE &amp; 100000 = 100000).</description>
							<type>0</type>
							<manual_close>0</manual_close>
							<dependencies/>
							<tags/>
						</trigger_prototype>
						<trigger_prototype>
							<expression>{GTS-IS Template IPMI Power Supply Sensors:ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}].band(#1,4)}=4</expression>
							<recovery_mode>0</recovery_mode>
							<recovery_expression/>
							<name>Power supply {#IPMI_SENSOR_NAME} predictive failure on {HOST.NAME}</name>
							<correlation_mode>0</correlation_mode>
							<correlation_tag/>
							<url/>
							<status>0</status>
							<priority>2</priority>
							<description>The IPMI power supply sensor (sensor
type code 08h) is in &quot;Predictive Failure&quot; (sensor specific offset 02h) state. The third least significant bit is 1 (VALUE &amp; 100 = 100).</description>
							<type>0</type>
							<manual_close>0</manual_close>
							<dependencies/>
							<tags/>
						</trigger_prototype>
						<trigger_prototype>
							<expression>{GTS-IS Template IPMI Power Supply Sensors:ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}].band(#1,1)}&lt;&gt;1</expression>
							<recovery_mode>0</recovery_mode>
							<recovery_expression/>
							<name>Power supply {#IPMI_SENSOR_NAME} presence not detected on {HOST.NAME}</name>
							<correlation_mode>0</correlation_mode>
							<correlation_tag/>
							<url/>
							<status>0</status>
							<priority>4</priority>
							<description>The IPMI power supply sensor (sensor
type code 08h) is not in &quot;Presence detected&quot; (sensor specific offset 00h) state. The least significant bit is not 1 (VALUE &amp; 1 = 0). This trigger serves as a safety catch-all for unknown states or IPMI implementation bugs.</description>
							<type>0</type>
							<manual_close>0</manual_close>
							<dependencies>
								<dependency>
									<name>Power supply {#IPMI_SENSOR_NAME} failure detected on {HOST.NAME}</name>
									<expression>{GTS-IS Template IPMI Power Supply Sensors:ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}].band(#1,2)}=2</expression>
									<recovery_expression/>
								</dependency>
								<dependency>
									<name>Power supply {#IPMI_SENSOR_NAME} has a configuration error on {HOST.NAME}</name>
									<expression>{GTS-IS Template IPMI Power Supply Sensors:ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}].band(#1,64)}=64</expression>
									<recovery_expression/>
								</dependency>
								<dependency>
									<name>Power supply {#IPMI_SENSOR_NAME} input lost (AC/DC) on {HOST.NAME}</name>
									<expression>{GTS-IS Template IPMI Power Supply Sensors:ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}].band(#1,8)}=8</expression>
									<recovery_expression/>
								</dependency>
								<dependency>
									<name>Power supply {#IPMI_SENSOR_NAME} input lost or out-of-range on {HOST.NAME}</name>
									<expression>{GTS-IS Template IPMI Power Supply Sensors:ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}].band(#1,16)}=16</expression>
									<recovery_expression/>
								</dependency>
								<dependency>
									<name>Power supply {#IPMI_SENSOR_NAME} input out-of-range, but present on {HOST.NAME}</name>
									<expression>{GTS-IS Template IPMI Power Supply Sensors:ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}].band(#1,32)}=32</expression>
									<recovery_expression/>
								</dependency>
								<dependency>
									<name>Power supply {#IPMI_SENSOR_NAME} predictive failure on {HOST.NAME}</name>
									<expression>{GTS-IS Template IPMI Power Supply Sensors:ipmi.discrete-sensor[power-supply,{#IPMI_SENSOR_NAME}].band(#1,4)}=4</expression>
									<recovery_expression/>
								</dependency>
							</dependencies>
							<tags/>
						</trigger_prototype>
					</trigger_prototypes>
					<graph_prototypes/>
					<host_prototypes/>
					<jmx_endpoint/>
				</discovery_rule>
			</discovery_rules>
			<httptests/>
			<macros>
				<macro>
					<macro>{$IPMI_POWER_SUPPLY_SENSOR_TYPES}</macro>
					<value>Power_Supply</value>
				</macro>
				<macro>
					<macro>{$MGT_IP}</macro>
					<value/>
				</macro>
				<macro>
					<macro>{$MGT_PASSWORD}</macro>
					<value/>
				</macro>
				<macro>
					<macro>{$MGT_USER}</macro>
					<value/>
				</macro>
			</macros>
			<templates/>
			<screens/>
		</template>
	</templates>
</zabbix_export>
